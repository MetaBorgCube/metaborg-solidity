module desugar/statements

imports
  
  signatures/expressions-sig
  signatures/statements-sig
  signatures/vars-sig
  desugar/expressions

rules
  //---------------------------------------------------------------------------
  //For loops
  //Convert SomeA and SomeB into Some.
  desugar: For(SomeA(a), b, c, body) -> For(Some(a), b, c, body)
  desugar: For(SomeB(a), b, c, body) -> For(Some(a), b, c, body)

  //No condition to true, e.g. for(a; ; b) -> for(a; true; b)
  desugar: For(a, None(), c, body) -> For(a, Some(True()), c, body)
  
  //For with only condition to while, e.g. for(; c;) -> while (c) 
  desugar: For(None(), cond, None(), body) -> While(cond', body)
    where
    <?Some(cond')> cond <+ cond' := cond
  
  //Remove the middle "Some"
  desugar: For(a, Some(b), c, body) -> For(a, b, c, body)
  
  //-----------------------------------------------------------------------------------------------
  //Convert back to original AST
  resugar: For(Some(ExpStmt(e)), b, c, body)                -> For(SomeA(ExpStmt(e)), b, c, body)
  resugar: For(Some(DeclareVar(t, v)), b, c, body)          -> For(SomeB(DeclareVar(t, v)), b, c, body)
  resugar: For(Some(DeclareVarAssign(t, v, a)), b, c, body) -> For(SomeB(DeclareVarAssign(t, v, a)), b, c, body)
  resugar: For(a, b, c, body)                               -> For(a, Some(b), c, body)
    where
    not(<?Some(_)> b)
