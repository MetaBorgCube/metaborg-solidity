module desugar/solimports

//Desugar imports into a standardized format to make it easier to work with.

imports
  signatures/solimports-sig
  signatures/Common-sig

signature
  sorts
    DImport
    DImportItem
  
  constructors
    Import     : List(DImportItem) * ImportFile -> DImport
    
    ImportStar : ImportName -> DImportItem
    ImportItem : ImportName * ImportName -> DImportItem

rules
  desugar = desugar-import
  
  //Translate the "import file as name" import syntax into the other syntax
  desugar-import: ImportFileAs(file, name) -> ImportItemFrom(Star(name), file)
  
  desugar-import: ImportItemFrom(items, file) -> Import(items', file)
    where
    items' := <convimport> items
    
  //import * as a              -> [ImportItem(* as a)]
  convimport: Star(name)       -> [ImportStar(name)]
  
  //import a                   -> [ImportItem(a as a)]
  convimport: Single(name)     -> [ImportItem(name, name)]
  
  //import a as b              -> [ImportItem(a as b)]
  convimport: SingleAs(n1, n2) -> [ImportItem(n1, n2)]
  
  //import {a, b as c, ...}    -> [ImportItem(a as a), ImportItem(b as c), ...] 
  convimport: Multi(ns)        -> items
    where
    items := <mapconcat(convimport)> ns
  
  //---------------------------------------------------------------------------
  //Resugar back to original form
  resugar = resugar-import
  
  resugar-import: Import(items, file) -> ImportItemFrom(items', file)
    where
    items' := <unconvimport2> items
  
  unconvimport1: ImportStar(name) -> Star(name)
  unconvimport1: ImportItem(a, b) -> SingleAs(a, b)
  unconvimport2: [head]           -> <unconvimport1> head
  unconvimport2: c@[_ | [_ | _]]  -> Multi(ns)
    where
    ns := <map(unconvimport1)> c
  
  
