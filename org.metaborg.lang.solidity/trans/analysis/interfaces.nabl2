module analysis/interfaces

imports

  signatures/interfaces-sig
  analysis/types

signature
  namespaces
    Interface

rules
  [[ c@Interface(name, functions) ^ (programScope) ]] :=
    //Define interface and type, also make it referrable
    Interface{name}      <- programScope,
    TypeReferrable{name} <- programScope,
    Interface{name}      : interfaceType !,
    TypeReferrable{name} : interfaceType !,
    interfaceType == NamedT(Interface{name}, InterfaceT()),
    VarT() <sub! interfaceType,
    
    //Create scope
    new interfaceScope,
    interfaceScope -P-> programScope,
    
    // Resolve functions
    Map1 [[ functions ^ (interfaceScope) ]],

    Interface{name}      =I=> interfaceScope,
    TypeReferrable{name} =I=> interfaceScope.
