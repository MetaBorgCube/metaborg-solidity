module analysis/structs

imports
  signatures/structs-sig
  signatures/vars-sig
  analysis/types
  analysis/vars

signature
  namespaces
    Struct
    StructField

rules
  [[ Struct(name, fields) ^ (clossScope) ]] :=
    Struct{name}         <- clossScope,
    TypeReferrable{name} <- clossScope,
    Struct{name}         : structType !,
    TypeReferrable{name} : structType !,
    structType == NamedT(Struct{name}, StructT()),
    VarT() <sub! structType,
    
    new structScope,
    structScope -P-> clossScope,
    
    Map1 [[ fields ^ (structScope) ]],
    
    distinct/name D(structScope)/Var | error $[Duplicate variable [NAME]] @NAMES,
    
    Struct{name}         =I=> structScope,
    TypeReferrable{name} =I=> structScope.
  
  [[ StructField(solType, name) ^ (structScope) ]] :=
    [[ solType ^ (structScope) : tyStructField ]],
    
    Var{name} <- structScope,
    Var{name}.origin := StructField(),
    Var{name} : tyStructField !. 
