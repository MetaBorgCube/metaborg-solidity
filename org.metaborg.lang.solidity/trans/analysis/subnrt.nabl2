module analysis/subnrt

rules
  NumberTypeSubs [[ p ^ (programScope) ]] :=
    //NrT of equal
    NrT(8, 8)     <sub! IntT(8),
    NrT(8, 8)     <sub! UIntT(8),
    NrT(16, 16)   <sub! IntT(16),
    NrT(16, 16)   <sub! UIntT(16),
    NrT(24, 24)   <sub! IntT(24),
    NrT(24, 24)   <sub! UIntT(24),
    NrT(32, 32)   <sub! IntT(32),
    NrT(32, 32)   <sub! UIntT(32),
    NrT(40, 40)   <sub! IntT(40),
    NrT(40, 40)   <sub! UIntT(40),
    NrT(48, 48)   <sub! IntT(48),
    NrT(48, 48)   <sub! UIntT(48),
    NrT(56, 56)   <sub! IntT(56),
    NrT(56, 56)   <sub! UIntT(56),
    NrT(64, 64)   <sub! IntT(64),
    NrT(64, 64)   <sub! UIntT(64),
    NrT(72, 72)   <sub! IntT(72),
    NrT(72, 72)   <sub! UIntT(72),
    NrT(80, 80)   <sub! IntT(80),
    NrT(80, 80)   <sub! UIntT(80),
    NrT(88, 88)   <sub! IntT(88),
    NrT(88, 88)   <sub! UIntT(88),
    NrT(96, 96)   <sub! IntT(96),
    NrT(96, 96)   <sub! UIntT(96),
    NrT(104, 104) <sub! IntT(104),
    NrT(104, 104) <sub! UIntT(104),
    NrT(112, 112) <sub! IntT(112),
    NrT(112, 112) <sub! UIntT(112),
    NrT(120, 120) <sub! IntT(120),
    NrT(120, 120) <sub! UIntT(120),
    NrT(128, 128) <sub! IntT(128),
    NrT(128, 128) <sub! UIntT(128),
    NrT(136, 136) <sub! IntT(136),
    NrT(136, 136) <sub! UIntT(136),
    NrT(144, 144) <sub! IntT(144),
    NrT(144, 144) <sub! UIntT(144),
    NrT(152, 152) <sub! IntT(152),
    NrT(152, 152) <sub! UIntT(152),
    NrT(160, 160) <sub! IntT(160),
    NrT(160, 160) <sub! UIntT(160),
    NrT(168, 168) <sub! IntT(168),
    NrT(168, 168) <sub! UIntT(168),
    NrT(176, 176) <sub! IntT(176),
    NrT(176, 176) <sub! UIntT(176),
    NrT(184, 184) <sub! IntT(184),
    NrT(184, 184) <sub! UIntT(184),
    NrT(192, 192) <sub! IntT(192),
    NrT(192, 192) <sub! UIntT(192),
    NrT(200, 200) <sub! IntT(200),
    NrT(200, 200) <sub! UIntT(200),
    NrT(208, 208) <sub! IntT(208),
    NrT(208, 208) <sub! UIntT(208),
    NrT(216, 216) <sub! IntT(216),
    NrT(216, 216) <sub! UIntT(216),
    NrT(224, 224) <sub! IntT(224),
    NrT(224, 224) <sub! UIntT(224),
    NrT(232, 232) <sub! IntT(232),
    NrT(232, 232) <sub! UIntT(232),
    NrT(240, 240) <sub! IntT(240),
    NrT(240, 240) <sub! UIntT(240),
    NrT(248, 248) <sub! IntT(248),
    NrT(248, 248) <sub! UIntT(248),
    NrT(256, 256) <sub! IntT(256),
    NrT(256, 256) <sub! UIntT(256),
    
    //NrT of unequal
	NrT(16, 8)    <sub! IntT(16),
    NrT(16, 8)    <sub! UIntT(8),
    NrT(24, 16)   <sub! IntT(24),
    NrT(24, 16)   <sub! UIntT(16),
    NrT(32, 24)   <sub! IntT(32),
    NrT(32, 24)   <sub! UIntT(24),
    NrT(40, 32)   <sub! IntT(40),
    NrT(40, 32)   <sub! UIntT(32),
    NrT(48, 40)   <sub! IntT(48),
    NrT(48, 40)   <sub! UIntT(40),
    NrT(56, 48)   <sub! IntT(56),
    NrT(56, 48)   <sub! UIntT(48),
    NrT(64, 56)   <sub! IntT(64),
    NrT(64, 56)   <sub! UIntT(56),
    NrT(72, 64)   <sub! IntT(72),
    NrT(72, 64)   <sub! UIntT(64),
    NrT(80, 72)   <sub! IntT(80),
    NrT(80, 72)   <sub! UIntT(72),
    NrT(88, 80)   <sub! IntT(88),
    NrT(88, 80)   <sub! UIntT(80),
    NrT(96, 88)   <sub! IntT(96),
    NrT(96, 88)   <sub! UIntT(88),
    NrT(104, 96)  <sub! IntT(104),
    NrT(104, 96)  <sub! UIntT(96),
    NrT(112, 104) <sub! IntT(112),
    NrT(112, 104) <sub! UIntT(104),
    NrT(120, 112) <sub! IntT(120),
    NrT(120, 112) <sub! UIntT(112),
    NrT(128, 120) <sub! IntT(128),
    NrT(128, 120) <sub! UIntT(120),
    NrT(136, 128) <sub! IntT(136),
    NrT(136, 128) <sub! UIntT(128),
    NrT(144, 136) <sub! IntT(144),
    NrT(144, 136) <sub! UIntT(136),
    NrT(152, 144) <sub! IntT(152),
    NrT(152, 144) <sub! UIntT(144),
    NrT(160, 152) <sub! IntT(160),
    NrT(160, 152) <sub! UIntT(152),
    NrT(168, 160) <sub! IntT(168),
    NrT(168, 160) <sub! UIntT(160),
    NrT(176, 168) <sub! IntT(176),
    NrT(176, 168) <sub! UIntT(168),
    NrT(184, 176) <sub! IntT(184),
    NrT(184, 176) <sub! UIntT(176),
    NrT(192, 184) <sub! IntT(192),
    NrT(192, 184) <sub! UIntT(184),
    NrT(200, 192) <sub! IntT(200),
    NrT(200, 192) <sub! UIntT(192),
    NrT(208, 200) <sub! IntT(208),
    NrT(208, 200) <sub! UIntT(200),
    NrT(216, 208) <sub! IntT(216),
    NrT(216, 208) <sub! UIntT(208),
    NrT(224, 216) <sub! IntT(224),
    NrT(224, 216) <sub! UIntT(216),
    NrT(232, 224) <sub! IntT(232),
    NrT(232, 224) <sub! UIntT(224),
    NrT(240, 232) <sub! IntT(240),
    NrT(240, 232) <sub! UIntT(232),
    NrT(248, 240) <sub! IntT(248),
    NrT(248, 240) <sub! UIntT(240),
    NrT(256, 248) <sub! IntT(256),
    NrT(256, 248) <sub! UIntT(248).
    
//    //NrT of negative
//    NrT(8, 0) <sub! IntT(8),
//    NrT(16, 0) <sub! IntT(16),
//    NrT(24, 0) <sub! IntT(24),
//    NrT(32, 0) <sub! IntT(32),
//    NrT(40, 0) <sub! IntT(40),
//    NrT(48, 0) <sub! IntT(48),
//    NrT(56, 0) <sub! IntT(56),
//    NrT(64, 0) <sub! IntT(64),
//    NrT(72, 0) <sub! IntT(72),
//    NrT(80, 0) <sub! IntT(80),
//    NrT(88, 0) <sub! IntT(88),
//    NrT(96, 0) <sub! IntT(96),
//    NrT(104, 0) <sub! IntT(104),
//    NrT(112, 0) <sub! IntT(112),
//    NrT(120, 0) <sub! IntT(120),
//    NrT(128, 0) <sub! IntT(128),
//    NrT(136, 0) <sub! IntT(136),
//    NrT(144, 0) <sub! IntT(144),
//    NrT(152, 0) <sub! IntT(152),
//    NrT(160, 0) <sub! IntT(160),
//    NrT(168, 0) <sub! IntT(168),
//    NrT(176, 0) <sub! IntT(176),
//    NrT(184, 0) <sub! IntT(184),
//    NrT(192, 0) <sub! IntT(192),
//    NrT(200, 0) <sub! IntT(200),
//    NrT(208, 0) <sub! IntT(208),
//    NrT(216, 0) <sub! IntT(216),
//    NrT(224, 0) <sub! IntT(224),
//    NrT(232, 0) <sub! IntT(232),
//    NrT(240, 0) <sub! IntT(240),
//    NrT(248, 0) <sub! IntT(248),
//    NrT(256, 0) <sub! IntT(256),