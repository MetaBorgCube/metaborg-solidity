module analysis/functionmodifiers

imports
  signatures/-

signature
  namespaces
    FunctionModifier

rules
  [[ FunctionModifier(name, params, stmt) ^ (s) ]] :=
    //Define modifier and type, also make it referrable
    FunctionModifier{name} <- s,
    TypeReferrable{name}   <- s,
    FunctionModifier{name} : modType !,
    TypeReferrable{name}   : modType !,
    modType == NamedT(FunctionModifier{name}, FunctionModT(paramTys)),
    
    VarT()       <sub! modType,
    
    new modScope,
    modScope -P-> s,
    
    [[ params ^ (modScope) : paramTys ]],
    [[ stmt ^ (modScope) ]],

    FunctionModifier{name} =I=> modScope,
    TypeReferrable{name}   =I=> modScope.
  
  [[ FMParams(params) ^ (modScope) : paramTys]] :=
    Map1T [[ params ^ (modScope) : paramTys ]].