module analysis/subtypes/stringliterals

rules
  SubStringLiterals [[ p ^ (programScope) ]] :=
    BuiltInType{"farray"} -> programScope,
    BuiltInType{"farray"} |-> farray,
    farray ?===> farrayScope,
    
    BuiltInType{"darray"} -> programScope,
    BuiltInType{"darray"} |-> darray,
    darray ?===> darrayScope,
    
    //String literal can be a string
    StringLitT(-1)  <sub! StringT(),
    StringLitT(0)  <sub! StringT(),
    StringLitT(1)  <sub! StringT(),
    StringLitT(2)  <sub! StringT(),
    StringLitT(3)  <sub! StringT(),
    StringLitT(4)  <sub! StringT(),
    StringLitT(5)  <sub! StringT(),
    StringLitT(6)  <sub! StringT(),
    StringLitT(7)  <sub! StringT(),
    StringLitT(8)  <sub! StringT(),
    StringLitT(9)  <sub! StringT(),
    StringLitT(10) <sub! StringT(),
    StringLitT(11) <sub! StringT(),
    StringLitT(12) <sub! StringT(),
    StringLitT(13) <sub! StringT(),
    StringLitT(14) <sub! StringT(),
    StringLitT(15) <sub! StringT(),
    StringLitT(16) <sub! StringT(),
    StringLitT(17) <sub! StringT(),
    StringLitT(18) <sub! StringT(),
    StringLitT(19) <sub! StringT(),
    StringLitT(20) <sub! StringT(),
    StringLitT(21) <sub! StringT(),
    StringLitT(22) <sub! StringT(),
    StringLitT(23) <sub! StringT(),
    StringLitT(24) <sub! StringT(),
    StringLitT(25) <sub! StringT(),
    StringLitT(26) <sub! StringT(),
    StringLitT(27) <sub! StringT(),
    StringLitT(28) <sub! StringT(),
    StringLitT(29) <sub! StringT(),
    StringLitT(30) <sub! StringT(),
    StringLitT(31) <sub! StringT(),
    StringLitT(32) <sub! StringT(),
    StringLitT(33) <sub! StringT(), //Any length
    
    //String literal can also be a fixed size byte array if it fits
    StringLitT(0)  <sub! FBytesT(1, farrayScope),
    StringLitT(1)  <sub! FBytesT(1, farrayScope),
    StringLitT(2)  <sub! FBytesT(2, farrayScope),
    StringLitT(3)  <sub! FBytesT(3, farrayScope),
    StringLitT(4)  <sub! FBytesT(4, farrayScope),
    StringLitT(5)  <sub! FBytesT(5, farrayScope),
    StringLitT(6)  <sub! FBytesT(6, farrayScope),
    StringLitT(7)  <sub! FBytesT(7, farrayScope),
    StringLitT(8)  <sub! FBytesT(8, farrayScope),
    StringLitT(9)  <sub! FBytesT(9, farrayScope),
    StringLitT(10) <sub! FBytesT(10, farrayScope),
    StringLitT(11) <sub! FBytesT(11, farrayScope),
    StringLitT(12) <sub! FBytesT(12, farrayScope),
    StringLitT(13) <sub! FBytesT(13, farrayScope),
    StringLitT(14) <sub! FBytesT(14, farrayScope),
    StringLitT(15) <sub! FBytesT(15, farrayScope),
    StringLitT(16) <sub! FBytesT(16, farrayScope),
    StringLitT(17) <sub! FBytesT(17, farrayScope),
    StringLitT(18) <sub! FBytesT(18, farrayScope),
    StringLitT(19) <sub! FBytesT(19, farrayScope),
    StringLitT(20) <sub! FBytesT(20, farrayScope),
    StringLitT(21) <sub! FBytesT(21, farrayScope),
    StringLitT(22) <sub! FBytesT(22, farrayScope),
    StringLitT(23) <sub! FBytesT(23, farrayScope),
    StringLitT(24) <sub! FBytesT(24, farrayScope),
    StringLitT(25) <sub! FBytesT(25, farrayScope),
    StringLitT(26) <sub! FBytesT(26, farrayScope),
    StringLitT(27) <sub! FBytesT(27, farrayScope),
    StringLitT(28) <sub! FBytesT(28, farrayScope),
    StringLitT(29) <sub! FBytesT(29, farrayScope),
    StringLitT(30) <sub! FBytesT(30, farrayScope),
    StringLitT(31) <sub! FBytesT(31, farrayScope),
    StringLitT(32) <sub! FBytesT(32, farrayScope),
    
    //String literal of arbitrary length is a subtype of dynamic bytes array.
    StringLitT(-1) <sub! DBytesT(darrayScope),
    StringLitT(0)  <sub! DBytesT(darrayScope),
    StringLitT(1)  <sub! DBytesT(darrayScope),
    StringLitT(2)  <sub! DBytesT(darrayScope),
    StringLitT(3)  <sub! DBytesT(darrayScope),
    StringLitT(4)  <sub! DBytesT(darrayScope),
    StringLitT(5)  <sub! DBytesT(darrayScope),
    StringLitT(6)  <sub! DBytesT(darrayScope),
    StringLitT(7)  <sub! DBytesT(darrayScope),
    StringLitT(8)  <sub! DBytesT(darrayScope),
    StringLitT(9)  <sub! DBytesT(darrayScope),
    StringLitT(10) <sub! DBytesT(darrayScope),
    StringLitT(11) <sub! DBytesT(darrayScope),
    StringLitT(12) <sub! DBytesT(darrayScope),
    StringLitT(13) <sub! DBytesT(darrayScope),
    StringLitT(14) <sub! DBytesT(darrayScope),
    StringLitT(15) <sub! DBytesT(darrayScope),
    StringLitT(16) <sub! DBytesT(darrayScope),
    StringLitT(17) <sub! DBytesT(darrayScope),
    StringLitT(18) <sub! DBytesT(darrayScope),
    StringLitT(19) <sub! DBytesT(darrayScope),
    StringLitT(20) <sub! DBytesT(darrayScope),
    StringLitT(21) <sub! DBytesT(darrayScope),
    StringLitT(22) <sub! DBytesT(darrayScope),
    StringLitT(23) <sub! DBytesT(darrayScope),
    StringLitT(24) <sub! DBytesT(darrayScope),
    StringLitT(25) <sub! DBytesT(darrayScope),
    StringLitT(26) <sub! DBytesT(darrayScope),
    StringLitT(27) <sub! DBytesT(darrayScope),
    StringLitT(28) <sub! DBytesT(darrayScope),
    StringLitT(29) <sub! DBytesT(darrayScope),
    StringLitT(30) <sub! DBytesT(darrayScope),
    StringLitT(31) <sub! DBytesT(darrayScope),
    StringLitT(32) <sub! DBytesT(darrayScope),
    StringLitT(33) <sub! DBytesT(darrayScope).
    