module analysis/subtypes/stringliterals

rules
  SubStringLiterals [[ p ^ (programScope) ]] :=
    //String literal can be a string
    StringLitT(0)  <sub! StringT(),
    StringLitT(1)  <sub! StringT(),
    StringLitT(2)  <sub! StringT(),
    StringLitT(3)  <sub! StringT(),
    StringLitT(4)  <sub! StringT(),
    StringLitT(5)  <sub! StringT(),
    StringLitT(6)  <sub! StringT(),
    StringLitT(7)  <sub! StringT(),
    StringLitT(8)  <sub! StringT(),
    StringLitT(9)  <sub! StringT(),
    StringLitT(10) <sub! StringT(),
    StringLitT(11) <sub! StringT(),
    StringLitT(12) <sub! StringT(),
    StringLitT(13) <sub! StringT(),
    StringLitT(14) <sub! StringT(),
    StringLitT(15) <sub! StringT(),
    StringLitT(16) <sub! StringT(),
    StringLitT(17) <sub! StringT(),
    StringLitT(18) <sub! StringT(),
    StringLitT(19) <sub! StringT(),
    StringLitT(20) <sub! StringT(),
    StringLitT(21) <sub! StringT(),
    StringLitT(22) <sub! StringT(),
    StringLitT(23) <sub! StringT(),
    StringLitT(24) <sub! StringT(),
    StringLitT(25) <sub! StringT(),
    StringLitT(26) <sub! StringT(),
    StringLitT(27) <sub! StringT(),
    StringLitT(28) <sub! StringT(),
    StringLitT(29) <sub! StringT(),
    StringLitT(30) <sub! StringT(),
    StringLitT(31) <sub! StringT(),
    StringLitT(32) <sub! StringT(),
    StringLitT(33) <sub! StringT(), //Any length
    
    //String literal can also be a fixed size byte array if it fits
    StringLitT(0)  <sub! FBytesT(1),
    StringLitT(1)  <sub! FBytesT(1),
    StringLitT(2)  <sub! FBytesT(2),
    StringLitT(3)  <sub! FBytesT(3),
    StringLitT(4)  <sub! FBytesT(4),
    StringLitT(5)  <sub! FBytesT(5),
    StringLitT(6)  <sub! FBytesT(6),
    StringLitT(7)  <sub! FBytesT(7),
    StringLitT(8)  <sub! FBytesT(8),
    StringLitT(9)  <sub! FBytesT(9),
    StringLitT(10) <sub! FBytesT(10),
    StringLitT(11) <sub! FBytesT(11),
    StringLitT(12) <sub! FBytesT(12),
    StringLitT(13) <sub! FBytesT(13),
    StringLitT(14) <sub! FBytesT(14),
    StringLitT(15) <sub! FBytesT(15),
    StringLitT(16) <sub! FBytesT(16),
    StringLitT(17) <sub! FBytesT(17),
    StringLitT(18) <sub! FBytesT(18),
    StringLitT(19) <sub! FBytesT(19),
    StringLitT(20) <sub! FBytesT(20),
    StringLitT(21) <sub! FBytesT(21),
    StringLitT(22) <sub! FBytesT(22),
    StringLitT(23) <sub! FBytesT(23),
    StringLitT(24) <sub! FBytesT(24),
    StringLitT(25) <sub! FBytesT(25),
    StringLitT(26) <sub! FBytesT(26),
    StringLitT(27) <sub! FBytesT(27),
    StringLitT(28) <sub! FBytesT(28),
    StringLitT(29) <sub! FBytesT(29),
    StringLitT(30) <sub! FBytesT(30),
    StringLitT(31) <sub! FBytesT(31),
    StringLitT(32) <sub! FBytesT(32),
    
    //String literal of arbitrary length is a subtype of dynamic bytes array.
    StringLitT(0)  <sub! DBytesT(),
    StringLitT(1)  <sub! DBytesT(),
    StringLitT(2)  <sub! DBytesT(),
    StringLitT(3)  <sub! DBytesT(),
    StringLitT(4)  <sub! DBytesT(),
    StringLitT(5)  <sub! DBytesT(),
    StringLitT(6)  <sub! DBytesT(),
    StringLitT(7)  <sub! DBytesT(),
    StringLitT(8)  <sub! DBytesT(),
    StringLitT(9)  <sub! DBytesT(),
    StringLitT(10) <sub! DBytesT(),
    StringLitT(11) <sub! DBytesT(),
    StringLitT(12) <sub! DBytesT(),
    StringLitT(13) <sub! DBytesT(),
    StringLitT(14) <sub! DBytesT(),
    StringLitT(15) <sub! DBytesT(),
    StringLitT(16) <sub! DBytesT(),
    StringLitT(17) <sub! DBytesT(),
    StringLitT(18) <sub! DBytesT(),
    StringLitT(19) <sub! DBytesT(),
    StringLitT(20) <sub! DBytesT(),
    StringLitT(21) <sub! DBytesT(),
    StringLitT(22) <sub! DBytesT(),
    StringLitT(23) <sub! DBytesT(),
    StringLitT(24) <sub! DBytesT(),
    StringLitT(25) <sub! DBytesT(),
    StringLitT(26) <sub! DBytesT(),
    StringLitT(27) <sub! DBytesT(),
    StringLitT(28) <sub! DBytesT(),
    StringLitT(29) <sub! DBytesT(),
    StringLitT(30) <sub! DBytesT(),
    StringLitT(31) <sub! DBytesT(),
    StringLitT(32) <sub! DBytesT(),
    StringLitT(33) <sub! DBytesT().
    